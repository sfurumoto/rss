<?php

namespace Rss\RecommendBundle\Repository;

use Symfony\Component\Security\Core\Exception\BadCredentialsException;
use Doctrine\ORM\EntityRepository;
use Rss\RecommendBundle\Entity\LoginUser;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Rss\RecommendBundle\Log\Log;

/**
 * LoginUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LoginUserRepository extends EntityRepository
{
    /**
     *
     * ユーザ名が既に使われているかを確認
     * @param LoginUser $user_data
     */
    public function isUsernameUsable(LoginUser $user_data)
    {
        // LoginUserを介して、DBからデータを検索するリポジトリを作成
        $em = $this->getEntityManager();
        $repository = $em->getRepository('RssRecommendBundle:LoginUser');
        $user_name = $repository->findOneByUsername($user_data->getUsername());
        // userが存在しない場合、DBに新規ユーザを登録
        if($user_name){
            throw new BadCredentialsException(sprintf('This User Name is already being used. [%s]', $user_data->getUsername()));
        }
        return true;
    }
    
    /**
     *
     * 新規ユーザの登録を行う
     * @param LoginUser $user_data
     * @param Controller $controller
     */
    public function createNewUser(LoginUser $user_data, Controller $controller)
    {
        Log::info("createNewUser: 新規ユーザの作成");
        //セキュリティの設定を読み込み
        $factory = $controller->get('security.encoder_factory');
        $encoder = $factory->getEncoder($user_data);
        //新規ユーザを登録する情報を記録
        Log::info("DB登録(User):" . $user_data->getUsername());
        Log::info("DB登録(Password):" . $user_data->getPassword());
        //パスワードのhash化
        $password = $encoder->encodePassword($user_data->getPassword(), $user_data->getSalt());
        Log::info("DB登録(Hashd_Password):" . $password);
        //hash化したパスワードで上書き
        $user_data->setPassword($password);
        //DBに登録
        $em = $this->getEntityManager();
        $em->persist($user_data);
        $em->flush();
    }
}
